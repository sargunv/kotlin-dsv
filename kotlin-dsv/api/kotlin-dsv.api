public final class dev/sargunv/kotlindsv/Csv : dev/sargunv/kotlindsv/DsvFormat {
	public static final field INSTANCE Ldev/sargunv/kotlindsv/Csv;
}

public class dev/sargunv/kotlindsv/DsvFormat : kotlinx/serialization/StringFormat {
	public fun <init> (Ldev/sargunv/kotlindsv/DsvScheme;Lkotlinx/serialization/modules/SerializersModule;Ldev/sargunv/kotlindsv/DsvNamingStrategy;ZZZ)V
	public synthetic fun <init> (Ldev/sargunv/kotlindsv/DsvScheme;Lkotlinx/serialization/modules/SerializersModule;Ldev/sargunv/kotlindsv/DsvNamingStrategy;ZZZILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun decodeFromSource (Lkotlinx/serialization/DeserializationStrategy;Lkotlinx/io/Source;)Ljava/lang/Object;
	public fun decodeFromString (Lkotlinx/serialization/DeserializationStrategy;Ljava/lang/String;)Ljava/lang/Object;
	public final fun encodeToSink (Lkotlinx/serialization/SerializationStrategy;Ljava/lang/Object;Lkotlinx/io/Sink;)V
	public fun encodeToString (Lkotlinx/serialization/SerializationStrategy;Ljava/lang/Object;)Ljava/lang/String;
	public final fun getIgnoreUnknownKeys ()Z
	public final fun getNamingStrategy ()Ldev/sargunv/kotlindsv/DsvNamingStrategy;
	public final fun getScheme ()Ldev/sargunv/kotlindsv/DsvScheme;
	public fun getSerializersModule ()Lkotlinx/serialization/modules/SerializersModule;
	public final fun getTreatMissingColumnsAsNull ()Z
	public final fun getWriteEnumsByName ()Z
}

public abstract interface class dev/sargunv/kotlindsv/DsvNamingStrategy {
	public abstract fun fromDsvName (Ljava/lang/String;)Ljava/lang/String;
	public fun reversed ()Ldev/sargunv/kotlindsv/DsvNamingStrategy;
	public abstract fun toDsvName (Ljava/lang/String;)Ljava/lang/String;
}

public final class dev/sargunv/kotlindsv/DsvNamingStrategy$Composite : dev/sargunv/kotlindsv/DsvNamingStrategy {
	public fun <init> (Ljava/util/List;)V
	public fun <init> ([Ldev/sargunv/kotlindsv/DsvNamingStrategy;)V
	public fun fromDsvName (Ljava/lang/String;)Ljava/lang/String;
	public fun reversed ()Ldev/sargunv/kotlindsv/DsvNamingStrategy;
	public fun toDsvName (Ljava/lang/String;)Ljava/lang/String;
}

public final class dev/sargunv/kotlindsv/DsvNamingStrategy$DefaultImpls {
	public static fun reversed (Ldev/sargunv/kotlindsv/DsvNamingStrategy;)Ldev/sargunv/kotlindsv/DsvNamingStrategy;
}

public final class dev/sargunv/kotlindsv/DsvNamingStrategy$Identity : dev/sargunv/kotlindsv/DsvNamingStrategy {
	public static final field INSTANCE Ldev/sargunv/kotlindsv/DsvNamingStrategy$Identity;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromDsvName (Ljava/lang/String;)Ljava/lang/String;
	public fun hashCode ()I
	public fun reversed ()Ldev/sargunv/kotlindsv/DsvNamingStrategy;
	public fun toDsvName (Ljava/lang/String;)Ljava/lang/String;
	public fun toString ()Ljava/lang/String;
}

public final class dev/sargunv/kotlindsv/DsvNamingStrategy$KebabCase : dev/sargunv/kotlindsv/DsvNamingStrategy {
	public static final field INSTANCE Ldev/sargunv/kotlindsv/DsvNamingStrategy$KebabCase;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromDsvName (Ljava/lang/String;)Ljava/lang/String;
	public fun hashCode ()I
	public fun reversed ()Ldev/sargunv/kotlindsv/DsvNamingStrategy;
	public fun toDsvName (Ljava/lang/String;)Ljava/lang/String;
	public fun toString ()Ljava/lang/String;
}

public final class dev/sargunv/kotlindsv/DsvNamingStrategy$SnakeCase : dev/sargunv/kotlindsv/DsvNamingStrategy {
	public static final field INSTANCE Ldev/sargunv/kotlindsv/DsvNamingStrategy$SnakeCase;
	public fun equals (Ljava/lang/Object;)Z
	public fun fromDsvName (Ljava/lang/String;)Ljava/lang/String;
	public fun hashCode ()I
	public fun reversed ()Ldev/sargunv/kotlindsv/DsvNamingStrategy;
	public fun toDsvName (Ljava/lang/String;)Ljava/lang/String;
	public fun toString ()Ljava/lang/String;
}

public final class dev/sargunv/kotlindsv/DsvParseException : kotlinx/serialization/SerializationException {
	public fun <init> (Ljava/lang/String;)V
}

public final class dev/sargunv/kotlindsv/DsvParser {
	public fun <init> (Lkotlinx/io/Source;Ldev/sargunv/kotlindsv/DsvScheme;)V
	public final fun parseRecords ()Lkotlin/sequences/Sequence;
	public final fun parseTable ()Ldev/sargunv/kotlindsv/DsvTable;
}

public final class dev/sargunv/kotlindsv/DsvScheme {
	public fun <init> (C)V
	public fun <init> (CC)V
	public fun <init> (CCZ)V
	public fun <init> (CCZZ)V
	public synthetic fun <init> (CCZZILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun copy (CCZZ)Ldev/sargunv/kotlindsv/DsvScheme;
	public static synthetic fun copy$default (Ldev/sargunv/kotlindsv/DsvScheme;CCZZILjava/lang/Object;)Ldev/sargunv/kotlindsv/DsvScheme;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/sargunv/kotlindsv/DsvTable {
	public fun <init> (Ljava/util/List;Lkotlin/sequences/Sequence;)V
	public final fun component1 ()Ljava/util/List;
	public final fun component2 ()Lkotlin/sequences/Sequence;
	public final fun copy (Ljava/util/List;Lkotlin/sequences/Sequence;)Ldev/sargunv/kotlindsv/DsvTable;
	public static synthetic fun copy$default (Ldev/sargunv/kotlindsv/DsvTable;Ljava/util/List;Lkotlin/sequences/Sequence;ILjava/lang/Object;)Ldev/sargunv/kotlindsv/DsvTable;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getHeader ()Ljava/util/List;
	public final fun getRecords ()Lkotlin/sequences/Sequence;
	public fun hashCode ()I
	public final fun recordsAsMaps ()Lkotlin/sequences/Sequence;
	public fun toString ()Ljava/lang/String;
}

public final class dev/sargunv/kotlindsv/DsvWriter {
	public fun <init> (Lkotlinx/io/Sink;Ldev/sargunv/kotlindsv/DsvScheme;)V
	public final fun writeRecords (Ljava/util/List;)V
	public final fun writeRecords (Lkotlin/sequences/Sequence;)V
	public final fun writeTable (Ldev/sargunv/kotlindsv/DsvTable;)V
	public final fun writeTable (Ljava/util/List;)V
	public final fun writeTable (Lkotlin/sequences/Sequence;)V
}

public final class dev/sargunv/kotlindsv/Tsv : dev/sargunv/kotlindsv/DsvFormat {
	public static final field INSTANCE Ldev/sargunv/kotlindsv/Tsv;
}

